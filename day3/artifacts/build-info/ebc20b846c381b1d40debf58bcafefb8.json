{
	"id": "ebc20b846c381b1d40debf58bcafefb8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"day3/p2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract MinMaxFinder {\r\n    \r\n    // Function to find the maximum and minimum of three numbers\r\n    function findMinMax(int num1, int num2, int num3) public pure returns (int, int) {\r\n        int max = num1;\r\n        int min = num1;\r\n        \r\n        // Finding the maximum\r\n        if (num2 > max) {\r\n            max = num2;\r\n        }\r\n        if (num3 > max) {\r\n            max = num3;\r\n        }\r\n        \r\n        // Finding the minimum\r\n        if (num2 < min) {\r\n            min = num2;\r\n        }\r\n        if (num3 < min) {\r\n            min = num3;\r\n        }\r\n        \r\n        return (max, min);\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"day3/p2.sol": {
				"MinMaxFinder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "num1",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "num2",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "num3",
									"type": "int256"
								}
							],
							"name": "findMinMax",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"day3/p2.sol\":60:677  contract MinMaxFinder {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"day3/p2.sol\":60:677  contract MinMaxFinder {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1a21b967\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"day3/p2.sol\":161:674  function findMinMax(int num1, int num2, int num3) public pure returns (int, int) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap3\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"day3/p2.sol\":232:235  int */\n      0x00\n        /* \"day3/p2.sol\":237:240  int */\n      dup1\n        /* \"day3/p2.sol\":253:260  int max */\n      0x00\n        /* \"day3/p2.sol\":263:267  num1 */\n      dup6\n        /* \"day3/p2.sol\":253:267  int max = num1 */\n      swap1\n      pop\n        /* \"day3/p2.sol\":278:285  int min */\n      0x00\n        /* \"day3/p2.sol\":288:292  num1 */\n      dup7\n        /* \"day3/p2.sol\":278:292  int min = num1 */\n      swap1\n      pop\n        /* \"day3/p2.sol\":356:359  max */\n      dup2\n        /* \"day3/p2.sol\":349:353  num2 */\n      dup7\n        /* \"day3/p2.sol\":349:359  num2 > max */\n      sgt\n        /* \"day3/p2.sol\":345:398  if (num2 > max) {... */\n      iszero\n      tag_11\n      jumpi\n        /* \"day3/p2.sol\":382:386  num2 */\n      dup6\n        /* \"day3/p2.sol\":376:386  max = num2 */\n      swap2\n      pop\n        /* \"day3/p2.sol\":345:398  if (num2 > max) {... */\n    tag_11:\n        /* \"day3/p2.sol\":419:422  max */\n      dup2\n        /* \"day3/p2.sol\":412:416  num3 */\n      dup6\n        /* \"day3/p2.sol\":412:422  num3 > max */\n      sgt\n        /* \"day3/p2.sol\":408:461  if (num3 > max) {... */\n      iszero\n      tag_12\n      jumpi\n        /* \"day3/p2.sol\":445:449  num3 */\n      dup5\n        /* \"day3/p2.sol\":439:449  max = num3 */\n      swap2\n      pop\n        /* \"day3/p2.sol\":408:461  if (num3 > max) {... */\n    tag_12:\n        /* \"day3/p2.sol\":524:527  min */\n      dup1\n        /* \"day3/p2.sol\":517:521  num2 */\n      dup7\n        /* \"day3/p2.sol\":517:527  num2 < min */\n      slt\n        /* \"day3/p2.sol\":513:566  if (num2 < min) {... */\n      iszero\n      tag_13\n      jumpi\n        /* \"day3/p2.sol\":550:554  num2 */\n      dup6\n        /* \"day3/p2.sol\":544:554  min = num2 */\n      swap1\n      pop\n        /* \"day3/p2.sol\":513:566  if (num2 < min) {... */\n    tag_13:\n        /* \"day3/p2.sol\":587:590  min */\n      dup1\n        /* \"day3/p2.sol\":580:584  num3 */\n      dup6\n        /* \"day3/p2.sol\":580:590  num3 < min */\n      slt\n        /* \"day3/p2.sol\":576:629  if (num3 < min) {... */\n      iszero\n      tag_14\n      jumpi\n        /* \"day3/p2.sol\":613:617  num3 */\n      dup5\n        /* \"day3/p2.sol\":607:617  min = num3 */\n      swap1\n      pop\n        /* \"day3/p2.sol\":576:629  if (num3 < min) {... */\n    tag_14:\n        /* \"day3/p2.sol\":657:660  max */\n      dup2\n        /* \"day3/p2.sol\":662:665  min */\n      dup2\n        /* \"day3/p2.sol\":649:666  return (max, min) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"day3/p2.sol\":161:674  function findMinMax(int num1, int num2, int num3) public pure returns (int, int) {... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_16:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:410   */\n    tag_18:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":399:404   */\n      dup2\n        /* \"#utility.yul\":388:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":416:536   */\n    tag_19:\n        /* \"#utility.yul\":488:511   */\n      tag_28\n        /* \"#utility.yul\":505:510   */\n      dup2\n        /* \"#utility.yul\":488:511   */\n      tag_18\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":481:486   */\n      dup2\n        /* \"#utility.yul\":478:512   */\n      eq\n        /* \"#utility.yul\":468:530   */\n      tag_29\n      jumpi\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":523:524   */\n      dup1\n        /* \"#utility.yul\":516:528   */\n      revert\n        /* \"#utility.yul\":468:530   */\n    tag_29:\n        /* \"#utility.yul\":416:536   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":542:679   */\n    tag_20:\n        /* \"#utility.yul\":587:592   */\n      0x00\n        /* \"#utility.yul\":625:631   */\n      dup2\n        /* \"#utility.yul\":612:632   */\n      calldataload\n        /* \"#utility.yul\":603:632   */\n      swap1\n      pop\n        /* \"#utility.yul\":641:673   */\n      tag_31\n        /* \"#utility.yul\":667:672   */\n      dup2\n        /* \"#utility.yul\":641:673   */\n      tag_19\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":542:679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":685:1298   */\n    tag_6:\n        /* \"#utility.yul\":759:765   */\n      0x00\n        /* \"#utility.yul\":767:773   */\n      dup1\n        /* \"#utility.yul\":775:781   */\n      0x00\n        /* \"#utility.yul\":824:826   */\n      0x60\n        /* \"#utility.yul\":812:821   */\n      dup5\n        /* \"#utility.yul\":803:810   */\n      dup7\n        /* \"#utility.yul\":799:822   */\n      sub\n        /* \"#utility.yul\":795:827   */\n      slt\n        /* \"#utility.yul\":792:911   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":830:909   */\n      tag_34\n      tag_16\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":792:911   */\n    tag_33:\n        /* \"#utility.yul\":950:951   */\n      0x00\n        /* \"#utility.yul\":975:1027   */\n      tag_35\n        /* \"#utility.yul\":1019:1026   */\n      dup7\n        /* \"#utility.yul\":1010:1016   */\n      dup3\n        /* \"#utility.yul\":999:1008   */\n      dup8\n        /* \"#utility.yul\":995:1017   */\n      add\n        /* \"#utility.yul\":975:1027   */\n      tag_20\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":965:1027   */\n      swap4\n      pop\n        /* \"#utility.yul\":921:1037   */\n      pop\n        /* \"#utility.yul\":1076:1078   */\n      0x20\n        /* \"#utility.yul\":1102:1154   */\n      tag_36\n        /* \"#utility.yul\":1146:1153   */\n      dup7\n        /* \"#utility.yul\":1137:1143   */\n      dup3\n        /* \"#utility.yul\":1126:1135   */\n      dup8\n        /* \"#utility.yul\":1122:1144   */\n      add\n        /* \"#utility.yul\":1102:1154   */\n      tag_20\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":1092:1154   */\n      swap3\n      pop\n        /* \"#utility.yul\":1047:1164   */\n      pop\n        /* \"#utility.yul\":1203:1205   */\n      0x40\n        /* \"#utility.yul\":1229:1281   */\n      tag_37\n        /* \"#utility.yul\":1273:1280   */\n      dup7\n        /* \"#utility.yul\":1264:1270   */\n      dup3\n        /* \"#utility.yul\":1253:1262   */\n      dup8\n        /* \"#utility.yul\":1249:1271   */\n      add\n        /* \"#utility.yul\":1229:1281   */\n      tag_20\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1219:1281   */\n      swap2\n      pop\n        /* \"#utility.yul\":1174:1291   */\n      pop\n        /* \"#utility.yul\":685:1298   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1304:1419   */\n    tag_21:\n        /* \"#utility.yul\":1389:1412   */\n      tag_39\n        /* \"#utility.yul\":1406:1411   */\n      dup2\n        /* \"#utility.yul\":1389:1412   */\n      tag_18\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1384:1387   */\n      dup3\n        /* \"#utility.yul\":1377:1413   */\n      mstore\n        /* \"#utility.yul\":1304:1419   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1425:1749   */\n    tag_9:\n        /* \"#utility.yul\":1542:1546   */\n      0x00\n        /* \"#utility.yul\":1580:1582   */\n      0x40\n        /* \"#utility.yul\":1569:1578   */\n      dup3\n        /* \"#utility.yul\":1565:1583   */\n      add\n        /* \"#utility.yul\":1557:1583   */\n      swap1\n      pop\n        /* \"#utility.yul\":1593:1662   */\n      tag_41\n        /* \"#utility.yul\":1659:1660   */\n      0x00\n        /* \"#utility.yul\":1648:1657   */\n      dup4\n        /* \"#utility.yul\":1644:1661   */\n      add\n        /* \"#utility.yul\":1635:1641   */\n      dup6\n        /* \"#utility.yul\":1593:1662   */\n      tag_21\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1672:1742   */\n      tag_42\n        /* \"#utility.yul\":1738:1740   */\n      0x20\n        /* \"#utility.yul\":1727:1736   */\n      dup4\n        /* \"#utility.yul\":1723:1741   */\n      add\n        /* \"#utility.yul\":1714:1720   */\n      dup5\n        /* \"#utility.yul\":1672:1742   */\n      tag_21\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1425:1749   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202a1a2c9171b58d2798049f37fb688c1d27cd4e0aba8ecd8dead0ba542aab181c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5061019b8061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c80631a21b9671461002d575b5f80fd5b610047600480360381019061004291906100df565b61005e565b60405161005592919061013e565b60405180910390f35b5f805f8590505f86905081861315610074578591505b81851315610080578491505b8086121561008c578590505b80851215610098578490505b8181935093505050935093915050565b5f80fd5b5f819050919050565b6100be816100ac565b81146100c8575f80fd5b50565b5f813590506100d9816100b5565b92915050565b5f805f606084860312156100f6576100f56100a8565b5b5f610103868287016100cb565b9350506020610114868287016100cb565b9250506040610125868287016100cb565b9150509250925092565b610138816100ac565b82525050565b5f6040820190506101515f83018561012f565b61015e602083018461012f565b939250505056fea26469706673582212202a1a2c9171b58d2798049f37fb688c1d27cd4e0aba8ecd8dead0ba542aab181c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1A21B967 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0xDF JUMP JUMPDEST PUSH2 0x5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55 SWAP3 SWAP2 SWAP1 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 DUP6 SWAP1 POP PUSH0 DUP7 SWAP1 POP DUP2 DUP7 SGT ISZERO PUSH2 0x74 JUMPI DUP6 SWAP2 POP JUMPDEST DUP2 DUP6 SGT ISZERO PUSH2 0x80 JUMPI DUP5 SWAP2 POP JUMPDEST DUP1 DUP7 SLT ISZERO PUSH2 0x8C JUMPI DUP6 SWAP1 POP JUMPDEST DUP1 DUP6 SLT ISZERO PUSH2 0x98 JUMPI DUP5 SWAP1 POP JUMPDEST DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE DUP2 PUSH2 0xAC JUMP JUMPDEST DUP2 EQ PUSH2 0xC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9 DUP2 PUSH2 0xB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF6 JUMPI PUSH2 0xF5 PUSH2 0xA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x103 DUP7 DUP3 DUP8 ADD PUSH2 0xCB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x114 DUP7 DUP3 DUP8 ADD PUSH2 0xCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x125 DUP7 DUP3 DUP8 ADD PUSH2 0xCB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x138 DUP2 PUSH2 0xAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x151 PUSH0 DUP4 ADD DUP6 PUSH2 0x12F JUMP JUMPDEST PUSH2 0x15E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A BYTE 0x2C SWAP2 PUSH18 0xB58D2798049F37FB688C1D27CD4E0ABA8ECD DUP14 0xEA 0xD0 0xBA SLOAD 0x2A 0xAB XOR SHR PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "60:617:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@findMinMax_63": {
									"entryPoint": 94,
									"id": 63,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"abi_decode_t_int256": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256t_int256t_int256": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_int256_t_int256__to_t_int256_t_int256__fromStack_reversed": {
									"entryPoint": 318,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 168,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1752:1",
										"nodeType": "YulBlock",
										"src": "0:1752:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "378:32:1",
													"nodeType": "YulBlock",
													"src": "378:32:1",
													"statements": [
														{
															"nativeSrc": "388:16:1",
															"nodeType": "YulAssignment",
															"src": "388:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "399:5:1",
																"nodeType": "YulIdentifier",
																"src": "399:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "334:76:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:1",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:1",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:76:1"
											},
											{
												"body": {
													"nativeSrc": "458:78:1",
													"nodeType": "YulBlock",
													"src": "458:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "514:16:1",
																"nodeType": "YulBlock",
																"src": "514:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "523:1:1",
																					"nodeType": "YulLiteral",
																					"src": "523:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "516:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			},
																			"nativeSrc": "516:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "516:12:1"
																		},
																		"nativeSrc": "516:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "516:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "481:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "481:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "505:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "505:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "488:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "488:16:1"
																				},
																				"nativeSrc": "488:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "488:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "478:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "478:2:1"
																		},
																		"nativeSrc": "478:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "478:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "471:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "471:6:1"
																},
																"nativeSrc": "471:42:1",
																"nodeType": "YulFunctionCall",
																"src": "471:42:1"
															},
															"nativeSrc": "468:62:1",
															"nodeType": "YulIf",
															"src": "468:62:1"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "416:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "451:5:1",
														"nodeType": "YulTypedName",
														"src": "451:5:1",
														"type": ""
													}
												],
												"src": "416:120:1"
											},
											{
												"body": {
													"nativeSrc": "593:86:1",
													"nodeType": "YulBlock",
													"src": "593:86:1",
													"statements": [
														{
															"nativeSrc": "603:29:1",
															"nodeType": "YulAssignment",
															"src": "603:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "625:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "625:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "612:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "612:12:1"
																},
																"nativeSrc": "612:20:1",
																"nodeType": "YulFunctionCall",
																"src": "612:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "603:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "603:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "667:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "667:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "641:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "641:25:1"
																},
																"nativeSrc": "641:32:1",
																"nodeType": "YulFunctionCall",
																"src": "641:32:1"
															},
															"nativeSrc": "641:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "641:32:1"
														}
													]
												},
												"name": "abi_decode_t_int256",
												"nativeSrc": "542:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "571:6:1",
														"nodeType": "YulTypedName",
														"src": "571:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "579:3:1",
														"nodeType": "YulTypedName",
														"src": "579:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "587:5:1",
														"nodeType": "YulTypedName",
														"src": "587:5:1",
														"type": ""
													}
												],
												"src": "542:137:1"
											},
											{
												"body": {
													"nativeSrc": "782:516:1",
													"nodeType": "YulBlock",
													"src": "782:516:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "828:83:1",
																"nodeType": "YulBlock",
																"src": "828:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "830:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "830:77:1"
																			},
																			"nativeSrc": "830:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "830:79:1"
																		},
																		"nativeSrc": "830:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "830:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "803:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "803:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "812:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "812:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "799:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "799:3:1"
																		},
																		"nativeSrc": "799:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "799:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "824:2:1",
																		"nodeType": "YulLiteral",
																		"src": "824:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "795:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "795:3:1"
																},
																"nativeSrc": "795:32:1",
																"nodeType": "YulFunctionCall",
																"src": "795:32:1"
															},
															"nativeSrc": "792:119:1",
															"nodeType": "YulIf",
															"src": "792:119:1"
														},
														{
															"nativeSrc": "921:116:1",
															"nodeType": "YulBlock",
															"src": "921:116:1",
															"statements": [
																{
																	"nativeSrc": "936:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "936:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "950:1:1",
																		"nodeType": "YulLiteral",
																		"src": "950:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "940:6:1",
																			"nodeType": "YulTypedName",
																			"src": "940:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "965:62:1",
																	"nodeType": "YulAssignment",
																	"src": "965:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "999:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "999:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1010:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1010:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "995:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "995:3:1"
																				},
																				"nativeSrc": "995:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "995:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1019:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nativeSrc": "975:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "975:19:1"
																		},
																		"nativeSrc": "975:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "975:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "965:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "965:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1047:117:1",
															"nodeType": "YulBlock",
															"src": "1047:117:1",
															"statements": [
																{
																	"nativeSrc": "1062:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1062:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1076:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1076:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1066:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1066:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1092:62:1",
																	"nodeType": "YulAssignment",
																	"src": "1092:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1126:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1126:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1137:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1137:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1122:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1122:3:1"
																				},
																				"nativeSrc": "1122:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1122:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1146:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1146:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nativeSrc": "1102:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "1102:19:1"
																		},
																		"nativeSrc": "1102:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1102:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1092:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1092:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1174:117:1",
															"nodeType": "YulBlock",
															"src": "1174:117:1",
															"statements": [
																{
																	"nativeSrc": "1189:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1189:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1203:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1203:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1193:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1193:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1219:62:1",
																	"nodeType": "YulAssignment",
																	"src": "1219:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1253:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1253:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1264:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1264:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1249:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1249:3:1"
																				},
																				"nativeSrc": "1249:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1249:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1273:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1273:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nativeSrc": "1229:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "1229:19:1"
																		},
																		"nativeSrc": "1229:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1229:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1219:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1219:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_int256t_int256",
												"nativeSrc": "685:613:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "736:9:1",
														"nodeType": "YulTypedName",
														"src": "736:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "747:7:1",
														"nodeType": "YulTypedName",
														"src": "747:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "759:6:1",
														"nodeType": "YulTypedName",
														"src": "759:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "767:6:1",
														"nodeType": "YulTypedName",
														"src": "767:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "775:6:1",
														"nodeType": "YulTypedName",
														"src": "775:6:1",
														"type": ""
													}
												],
												"src": "685:613:1"
											},
											{
												"body": {
													"nativeSrc": "1367:52:1",
													"nodeType": "YulBlock",
													"src": "1367:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1384:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1384:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1406:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1406:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nativeSrc": "1389:16:1",
																			"nodeType": "YulIdentifier",
																			"src": "1389:16:1"
																		},
																		"nativeSrc": "1389:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1389:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1377:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1377:6:1"
																},
																"nativeSrc": "1377:36:1",
																"nodeType": "YulFunctionCall",
																"src": "1377:36:1"
															},
															"nativeSrc": "1377:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "1377:36:1"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nativeSrc": "1304:115:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1355:5:1",
														"nodeType": "YulTypedName",
														"src": "1355:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1362:3:1",
														"nodeType": "YulTypedName",
														"src": "1362:3:1",
														"type": ""
													}
												],
												"src": "1304:115:1"
											},
											{
												"body": {
													"nativeSrc": "1547:202:1",
													"nodeType": "YulBlock",
													"src": "1547:202:1",
													"statements": [
														{
															"nativeSrc": "1557:26:1",
															"nodeType": "YulAssignment",
															"src": "1557:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1569:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1569:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1580:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1580:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1565:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1565:3:1"
																},
																"nativeSrc": "1565:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1565:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1557:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1557:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1635:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1635:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1648:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1648:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1659:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1659:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1644:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1644:3:1"
																		},
																		"nativeSrc": "1644:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1644:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "1593:41:1",
																	"nodeType": "YulIdentifier",
																	"src": "1593:41:1"
																},
																"nativeSrc": "1593:69:1",
																"nodeType": "YulFunctionCall",
																"src": "1593:69:1"
															},
															"nativeSrc": "1593:69:1",
															"nodeType": "YulExpressionStatement",
															"src": "1593:69:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1714:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1714:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1727:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1727:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1738:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1738:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1723:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1723:3:1"
																		},
																		"nativeSrc": "1723:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1723:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "1672:41:1",
																	"nodeType": "YulIdentifier",
																	"src": "1672:41:1"
																},
																"nativeSrc": "1672:70:1",
																"nodeType": "YulFunctionCall",
																"src": "1672:70:1"
															},
															"nativeSrc": "1672:70:1",
															"nodeType": "YulExpressionStatement",
															"src": "1672:70:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256_t_int256__to_t_int256_t_int256__fromStack_reversed",
												"nativeSrc": "1425:324:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1511:9:1",
														"nodeType": "YulTypedName",
														"src": "1511:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1523:6:1",
														"nodeType": "YulTypedName",
														"src": "1523:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1531:6:1",
														"nodeType": "YulTypedName",
														"src": "1531:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1542:4:1",
														"nodeType": "YulTypedName",
														"src": "1542:4:1",
														"type": ""
													}
												],
												"src": "1425:324:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256t_int256t_int256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256_t_int256__to_t_int256_t_int256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c80631a21b9671461002d575b5f80fd5b610047600480360381019061004291906100df565b61005e565b60405161005592919061013e565b60405180910390f35b5f805f8590505f86905081861315610074578591505b81851315610080578491505b8086121561008c578590505b80851215610098578490505b8181935093505050935093915050565b5f80fd5b5f819050919050565b6100be816100ac565b81146100c8575f80fd5b50565b5f813590506100d9816100b5565b92915050565b5f805f606084860312156100f6576100f56100a8565b5b5f610103868287016100cb565b9350506020610114868287016100cb565b9250506040610125868287016100cb565b9150509250925092565b610138816100ac565b82525050565b5f6040820190506101515f83018561012f565b61015e602083018461012f565b939250505056fea26469706673582212202a1a2c9171b58d2798049f37fb688c1d27cd4e0aba8ecd8dead0ba542aab181c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1A21B967 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0xDF JUMP JUMPDEST PUSH2 0x5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55 SWAP3 SWAP2 SWAP1 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 DUP6 SWAP1 POP PUSH0 DUP7 SWAP1 POP DUP2 DUP7 SGT ISZERO PUSH2 0x74 JUMPI DUP6 SWAP2 POP JUMPDEST DUP2 DUP6 SGT ISZERO PUSH2 0x80 JUMPI DUP5 SWAP2 POP JUMPDEST DUP1 DUP7 SLT ISZERO PUSH2 0x8C JUMPI DUP6 SWAP1 POP JUMPDEST DUP1 DUP6 SLT ISZERO PUSH2 0x98 JUMPI DUP5 SWAP1 POP JUMPDEST DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE DUP2 PUSH2 0xAC JUMP JUMPDEST DUP2 EQ PUSH2 0xC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9 DUP2 PUSH2 0xB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF6 JUMPI PUSH2 0xF5 PUSH2 0xA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x103 DUP7 DUP3 DUP8 ADD PUSH2 0xCB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x114 DUP7 DUP3 DUP8 ADD PUSH2 0xCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x125 DUP7 DUP3 DUP8 ADD PUSH2 0xCB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x138 DUP2 PUSH2 0xAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x151 PUSH0 DUP4 ADD DUP6 PUSH2 0x12F JUMP JUMPDEST PUSH2 0x15E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A BYTE 0x2C SWAP2 PUSH18 0xB58D2798049F37FB688C1D27CD4E0ABA8ECD DUP14 0xEA 0xD0 0xBA SLOAD 0x2A 0xAB XOR SHR PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "60:617:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;161:513;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;232:3;237;253:7;263:4;253:14;;278:7;288:4;278:14;;356:3;349:4;:10;345:53;;;382:4;376:10;;345:53;419:3;412:4;:10;408:53;;;445:4;439:10;;408:53;524:3;517:4;:10;513:53;;;550:4;544:10;;513:53;587:3;580:4;:10;576:53;;;613:4;607:10;;576:53;657:3;662;649:17;;;;;;161:513;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:76;370:7;399:5;388:16;;334:76;;;:::o;416:120::-;488:23;505:5;488:23;:::i;:::-;481:5;478:34;468:62;;526:1;523;516:12;468:62;416:120;:::o;542:137::-;587:5;625:6;612:20;603:29;;641:32;667:5;641:32;:::i;:::-;542:137;;;;:::o;685:613::-;759:6;767;775;824:2;812:9;803:7;799:23;795:32;792:119;;;830:79;;:::i;:::-;792:119;950:1;975:52;1019:7;1010:6;999:9;995:22;975:52;:::i;:::-;965:62;;921:116;1076:2;1102:52;1146:7;1137:6;1126:9;1122:22;1102:52;:::i;:::-;1092:62;;1047:117;1203:2;1229:52;1273:7;1264:6;1253:9;1249:22;1229:52;:::i;:::-;1219:62;;1174:117;685:613;;;;;:::o;1304:115::-;1389:23;1406:5;1389:23;:::i;:::-;1384:3;1377:36;1304:115;;:::o;1425:324::-;1542:4;1580:2;1569:9;1565:18;1557:26;;1593:69;1659:1;1648:9;1644:17;1635:6;1593:69;:::i;:::-;1672:70;1738:2;1727:9;1723:18;1714:6;1672:70;:::i;:::-;1425:324;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "82200",
								"executionCost": "127",
								"totalCost": "82327"
							},
							"external": {
								"findMinMax(int256,int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 677,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 677,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 677,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 677,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 677,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 677,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 677,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 677,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 677,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 677,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 677,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 677,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 677,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 677,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 677,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 677,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 677,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 677,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 677,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 677,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202a1a2c9171b58d2798049f37fb688c1d27cd4e0aba8ecd8dead0ba542aab181c64736f6c634300081a0033",
									".code": [
										{
											"begin": 60,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 677,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 677,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 677,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "1A21B967"
										},
										{
											"begin": 60,
											"end": 677,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 677,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 161,
											"end": 674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 161,
											"end": 674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 161,
											"end": 674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 161,
											"end": 674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 161,
											"end": 674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 161,
											"end": 674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 161,
											"end": 674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 161,
											"end": 674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 161,
											"end": 674,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 161,
											"end": 674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 161,
											"end": 674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 161,
											"end": 674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 253,
											"end": 260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 267,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 253,
											"end": 267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 253,
											"end": 267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 292,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 278,
											"end": 292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 356,
											"end": 359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 349,
											"end": 353,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 349,
											"end": 359,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 345,
											"end": 398,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 345,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 345,
											"end": 398,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 382,
											"end": 386,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 376,
											"end": 386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 376,
											"end": 386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 345,
											"end": 398,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 345,
											"end": 398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 419,
											"end": 422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 412,
											"end": 416,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 412,
											"end": 422,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 408,
											"end": 461,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 408,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 408,
											"end": 461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 445,
											"end": 449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 439,
											"end": 449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 439,
											"end": 449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 408,
											"end": 461,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 408,
											"end": 461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 524,
											"end": 527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 517,
											"end": 521,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 517,
											"end": 527,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 513,
											"end": 566,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 513,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 513,
											"end": 566,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 550,
											"end": 554,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 544,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 513,
											"end": 566,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 513,
											"end": 566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 587,
											"end": 590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 584,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 580,
											"end": 590,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 576,
											"end": 629,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 576,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 576,
											"end": 629,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 617,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 607,
											"end": 617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 576,
											"end": 629,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 576,
											"end": 629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 662,
											"end": 665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 161,
											"end": 674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 334,
											"end": 410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 388,
											"end": 404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 536,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 416,
											"end": 536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 488,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 505,
											"end": 510,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 488,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 488,
											"end": 511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 488,
											"end": 511,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 488,
											"end": 511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 481,
											"end": 486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 478,
											"end": 512,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 468,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 468,
											"end": 530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 516,
											"end": 528,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 468,
											"end": 530,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 468,
											"end": 530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 542,
											"end": 679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 587,
											"end": 592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 612,
											"end": 632,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 603,
											"end": 632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 603,
											"end": 632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 667,
											"end": 672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 641,
											"end": 673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 673,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 641,
											"end": 673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1298,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 685,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 759,
											"end": 765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 826,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 803,
											"end": 810,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 799,
											"end": 822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 795,
											"end": 827,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 792,
											"end": 911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 792,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 792,
											"end": 911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 830,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 830,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 830,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 830,
											"end": 909,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 830,
											"end": 909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 792,
											"end": 911,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 792,
											"end": 911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 950,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1008,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 975,
											"end": 1027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1027,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 975,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1027,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 921,
											"end": 1037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1078,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1102,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1146,
											"end": 1153,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1135,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1102,
											"end": 1154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1102,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1205,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1273,
											"end": 1280,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1262,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1281,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1229,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1298,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1298,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1298,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 685,
											"end": 1298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1419,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1304,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1406,
											"end": 1411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1389,
											"end": 1412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1412,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1389,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1387,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1749,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1425,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1582,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1569,
											"end": 1578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1659,
											"end": 1660,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 1661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1641,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1593,
											"end": 1662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1662,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1593,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1738,
											"end": 1740,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1720,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1672,
											"end": 1742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1742,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1672,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1749,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1749,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"day3/p2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"findMinMax(int256,int256,int256)": "1a21b967"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"num1\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"num2\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"num3\",\"type\":\"int256\"}],\"name\":\"findMinMax\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"day3/p2.sol\":\"MinMaxFinder\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"day3/p2.sol\":{\"keccak256\":\"0x9b976c8bfeb14e7efcd8a4932720800b948a7a9a25b87e5c8573df86a05e69a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acf0f2e3ac889d6b878b5732edd053c333daaa6dcb325cc1cf816b0cf41c8e63\",\"dweb:/ipfs/QmeZ2PEMAkxDqqeKjwFk9GLYFEfwVmZM6NT8SCK1pZKFh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"day3/p2.sol": {
				"ast": {
					"absolutePath": "day3/p2.sol",
					"exportedSymbols": {
						"MinMaxFinder": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MinMaxFinder",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "MinMaxFinder",
							"nameLocation": "69:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "242:432:0",
										"statements": [
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"mutability": "mutable",
														"name": "max",
														"nameLocation": "257:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 62,
														"src": "253:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 14,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "253:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 17,
												"initialValue": {
													"id": 16,
													"name": "num1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "263:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "253:14:0"
											},
											{
												"assignments": [
													19
												],
												"declarations": [
													{
														"constant": false,
														"id": 19,
														"mutability": "mutable",
														"name": "min",
														"nameLocation": "282:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 62,
														"src": "278:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 18,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "278:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"id": 20,
													"name": "num1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "288:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "278:14:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 22,
														"name": "num2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "349:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 23,
														"name": "max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "356:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "349:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 30,
												"nodeType": "IfStatement",
												"src": "345:53:0",
												"trueBody": {
													"id": 29,
													"nodeType": "Block",
													"src": "361:37:0",
													"statements": [
														{
															"expression": {
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 25,
																	"name": "max",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "376:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 26,
																	"name": "num2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "382:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "376:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 28,
															"nodeType": "ExpressionStatement",
															"src": "376:10:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 31,
														"name": "num3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "412:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 32,
														"name": "max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "419:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "412:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 39,
												"nodeType": "IfStatement",
												"src": "408:53:0",
												"trueBody": {
													"id": 38,
													"nodeType": "Block",
													"src": "424:37:0",
													"statements": [
														{
															"expression": {
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 34,
																	"name": "max",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "439:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 35,
																	"name": "num3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "445:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "439:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 37,
															"nodeType": "ExpressionStatement",
															"src": "439:10:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 40,
														"name": "num2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "517:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 41,
														"name": "min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "524:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "517:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 48,
												"nodeType": "IfStatement",
												"src": "513:53:0",
												"trueBody": {
													"id": 47,
													"nodeType": "Block",
													"src": "529:37:0",
													"statements": [
														{
															"expression": {
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 43,
																	"name": "min",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "544:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 44,
																	"name": "num2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "550:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "544:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 46,
															"nodeType": "ExpressionStatement",
															"src": "544:10:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "num3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "580:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 50,
														"name": "min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "587:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "580:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 57,
												"nodeType": "IfStatement",
												"src": "576:53:0",
												"trueBody": {
													"id": 56,
													"nodeType": "Block",
													"src": "592:37:0",
													"statements": [
														{
															"expression": {
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 52,
																	"name": "min",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "607:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 53,
																	"name": "num3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "613:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "607:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 55,
															"nodeType": "ExpressionStatement",
															"src": "607:10:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 58,
															"name": "max",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "657:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 59,
															"name": "min",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "662:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"id": 60,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "656:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
														"typeString": "tuple(int256,int256)"
													}
												},
												"functionReturnParameters": 13,
												"id": 61,
												"nodeType": "Return",
												"src": "649:17:0"
											}
										]
									},
									"functionSelector": "1a21b967",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findMinMax",
									"nameLocation": "170:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "num1",
												"nameLocation": "185:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "181:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "181:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "num2",
												"nameLocation": "195:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "191:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "191:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "num3",
												"nameLocation": "205:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "201:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 6,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "201:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "180:30:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "232:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 9,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "232:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "237:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 11,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "237:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:10:0"
									},
									"scope": 64,
									"src": "161:513:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 65,
							"src": "60:617:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:646:0"
				},
				"id": 0
			}
		}
	}
}